/*
Screen {
    layout: grid;  # The entire screen will use a grid layout
    grid-size: 5;  # Defines a 5-column grid
}
*/


#AppGrid {
    layout: grid;
    grid-size: 1 3;  /* 5 columns, 3 rows */
    /*grid-columns: 1fr;  /* Each column takes equal width */
    grid-rows: 5 1fr 10;  /* Top row = 4 chars, middle row flexible, bottom row = 5 chars */
}

#TopBar {
    /* column-span: 5;  # Spans all 5 columns of the screen grid */
    layout: grid;  # The TopBar itself is a grid
    grid-size: 3;  # Divided into 3 columns (buttons, label, progress bar)
    grid-columns: 1fr 1.35fr 1fr;
    align: center middle;  # Centers items both horizontally & vertically
    /*# dock: top;  */
    height: 1fr;  # Height of the top bar
}


#TopBarButtonHorizontal {
    layout: horizontal;  # Buttons are placed horizontally
    align: left top;
    # column-span:1;
    margin-top:1;
    /*
    margin-left: 2;
    margin-right: 2;
    
    # width: 1fr;  # Ensures it takes equal space in grid
    */
}


/*
# 
#TopBarButtonHorizontal > Button {
#     margin-left: 2;
#     margin-right: 2;
#     height: 3;
#     width: 1fr;  # Takes equal space in grid
#     content-align: center middle;
# }

*/

/*
# #TopBarButtonHorizontal > Button {
#     min-width: 7;  // ✅ Makes buttons only as wide as needed 
#     padding: 0 0;  // ✅ Small padding for spacing 
#     margin-left: 2;
#     margin-right: 2;
#     height: 3;
#     content-align: center middle;
#     border: none;
# }

*/

#ExitButton, #RunButton, #PauseButton, #StopButton {
    min-width: 8;
    margin-left: 2;
    margin-right: 2;
    height: 3;
    color: transparent;
    content-align: center middle;
    /*border: round $primary;*/
}

#DebugCheckBox {
    min-width: 15;
    content-align: center middle;
}

/*
#PauseButton {
    background: transparent;
}
*/   


#TopBarLabelHorizontal {
    align: center top;
    column-span:1;
    margin-top:0;
    margin-left: 2;
    margin-right: 2;
    /* # width: 2fr;  # Takes more space than the other sections*/
}

#TopBarLabel {
    margin-left: 2;
    margin-right: 2;
    content-align: center middle;
    text-align: center;
    width: 100%;
    background: transparent;
    border: round $primary;
}



#TopBarProgressBarHorizontal {
    align: right middle;
    column-span:1;
    margin-top:1;
    margin-left: 2;
    margin-right: 3;
    width: 1fr;  # Ensures it takes equal space in grid
}

#TopBarProgressBarLabel {
    text-align: right;
    margin-right: 1;
    /*
    content-align: center middle;
    */
}


#DetailsTextArea {
    /*# dock: bottom;
    width: 100%;
    # height: 2fr;*/
    background: $surface;
    text-align: left;
    content-align: left top;
    overflow: auto; /* Enables scrolling */
    border: round $primary;
    margin-left:2;
    margin-right:2;
}


/* Here we add CSS for each table/content in the main grid as they are created.
We start by the top left, and the order is from left to right, top to bottom. */



/* MainGrid is the VerticalScroll that will have all tables, we use VerticalScroll to allow "large" tables to be as large as we want*/
#MainGrid {
    /*column-span: 5;  /* Spans all 5 columns */
    layout: vertical;  /* MainGrid is a vertical layout */
    overflow: auto auto;  /* Enables scrolling */
    grid-size: 5;
    /*height: 12fr;*/
    /*width: 100%;*/
    margin-left:2;
    margin-right:2;
    margin-top:2;
    margin-bottom:2;
    /*
    layout: grid;
    grid-size: 5;  // Matches Screen grid 
    height: auto;
    overflow: auto auto;
    */
}




/* ==========================
/* First Row: Case Tree & Progress Table
/* ========================== */
/* We define the first "row" as a horizontal, to also allow "wide content to be visualized properly if needed". Each element will be "scrollable by itself too --> will be placed in verticalscroll <-- if it does not support "scrolling" by default.

If we have wide element, we use HorizontalScroll, here, we use horizontal only*/

#CaseTreeProgressTableRow{
    layout: horizontal;
    height: 10;
    overflow: auto auto;
}

/*Supports scrolling by default*/
#CaseTreeContainer {
    height: 10;
    width: 1fr;
    border: round $primary;
    /*
    border-title: "Ilyas";
    */
}

#ProgressTableContainer{
    height: 10;
    width: 4fr;
    border: round $primary;
}

/* ==========================
/* Second Row: AGC and Generator Tables
/* ========================== */

#AGCGeneratorTablesRow{
    layout: horizontal;
    height: 14;
    overflow: auto auto;
    /*# margin-top:1;*/
}

#AGCTableContainer {
    height: 14;
    width: 2fr;
    border: round $primary;
}

#GeneratorTableContainer{
    height: 14;
    width: 3fr;
    border: round $primary;
}


/* ==========================
/* Third Row: Load and Bus Tables
/* ========================== */

#LoadBusTablesRow{
    layout: horizontal;
    height: 14;
    overflow: auto auto;
    /*# margin-top:1;*/
}

#LoadTableContainer {
    height: 14;
    width: 2fr;
    border: round $primary;
}

#BusTableContainer{
    height: 14;
    width: 3fr;
    border: round $primary;
}

/* ==========================
/* Forth Row: Branch and Transformer Tables
/* ========================== */

#BranchTransformerTablesRow{
    layout: horizontal;
    height: 14;
    overflow: auto auto;
    /*# margin-top:1;*/
}

#BranchTableContainer {
    height: 14;
    width: 2fr;
    border: round $primary;
}

#TransformerTableContainer{
    height: 14;
    width: 3fr;
    border: round $primary;
}



